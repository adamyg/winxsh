# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.15 2023/12/26 17:01:00 cvsuser Exp $
# libtermemu makefile.
#
#
# Copyright (c) 2015 - 2022, Adam Young.
# All rights reserved.
#
# This file is part of the WinRSH/WinSSH project.
#
# The WinRSH/WinSSH project is free software: you can redistribute it
# and/or modify it under the terms of the WinRSH/WinSSH project License.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The WinRSH/WinSSH project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# License for more details.
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

O=		.o
H=		.h
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB=		@RANLIB@
RM=		@RM@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/obj@TOOLCHAINEXT@/$(BUILD_TYPE)/libtermemu
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

# Common flags

XFLAGS=		

CFLAGS=		@CFLAGS@
CWARN=		@CWARN@
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I. -I$(D_INC) @CINCLUDE@
CEXTRA=		@DEFS@
ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(D_LIB) @LIBS@ @EXTRALIBS@

ARFLAGS=	rcv
YFLAGS=		-d
RMFLAGS=	-f

############################################################

LIBROOT=	termemu

CSOURCES=\
	termemu_tsm.c termemu_vio.c termemu_cio.c termemu_keysym.c termemu_keymap.c termemu_keyexec.c \
	compat_strtonum.c compat_inet_ntop.c compat_inet_pton.c \
	tsm_screen.c tsm_unicode.c tsm_vte.c tsm_vte_charsets.c \
	shl_htable.c shl_ring.c

VPATH=		./libtsm
LIBOBJS=\
	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(CSOURCES)))

LIBRARY=	$(D_LIB)/$(LP)$(LIBROOT)$(A)

############################################################

MKKEYS_CSOURCE=\
	termemumkkeys.c

MKKEYS_OBJS=\
	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(MKKEYS_CSOURCE)))

KBTEST_CSOURCE=\
	termemukbtest.c

KBTEST_OBJS=\
	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(KBTEST_CSOURCE) $(CSOURCES)))

TSKS=		$(D_BIN)/mkkeys$(E)		\
		$(D_BIN)/kbtest$(E)

############################################################

all:			$(LIBRARY) $(TSKS)

$(LIBRARY):		$(D_OBJ)/.created $(LIBOBJS)
		$(RM) $(RMFLAGS) $@
		$(AR) $(ARFLAGS) $@ $(LIBOBJS)
		$(RANLIB) $@

$(D_BIN)/mkkeys$(E):	MAPFILE=$(basename $@).map
$(D_BIN)/mkkeys$(E):	$(D_OBJ)/.created $(MKKEYS_OBJS)
		$(CC) $(LDFLAGS) -o $@ $(MKKEYS_OBJS) $(LDLIBS) @LDMAPFILE@

$(D_BIN)/kbtest$(E):	MAPFILE=$(basename $@).map
$(D_BIN)/kbtest$(E):	$(D_OBJ)/.created $(KBTEST_OBJS)
		$(CC) $(LDFLAGS) -o $@ $(KBTEST_OBJS) $(LDLIBS) @LDMAPFILE@

$(D_OBJ)/.created:
		-@mkdir $(D_OBJ)
		@echo "do not create" > $@

clean:
		-@$(RM) $(RMFLAGS) $(BAK) $(LIBRARY) $(LIBOBJS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1

$(D_OBJ)/%$(O):		%.c
		$(CC) $(CFLAGS) -o $@ -c $<

#end

